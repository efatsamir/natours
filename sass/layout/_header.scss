
 .header {
    // height: 95vh;
    height: 85vh;
    background-image: linear-gradient( 
            to right bottom,
            rgba( $color-primary-light, 0.8 ),
            rgba($color-primary-dark, 0.8)
        ),
    url(./../img/hero-small.jpg);
    background-size: cover;
     /* top of img will stay at top of container when resizing viewport */
     /* top of img stays the same & crop will be on other sides when resizing viewport */
    background-position: top;
    // -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh , 0 100% );
    // clip-path: polygon(0 0, 100% 0, 100% 75vh , 0 100% );
    position: relative;



    @supports (-webkit-clip-path: polygon(0 0 )) or (clip-path: polygon(0 0 )) {
        height: 95vh;
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh , 0 100% );
        clip-path: polygon(0 0, 100% 0, 100% 75vh , 0 100% )
    }


    
    // resp. img in css
    @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
           // comma acts as or here so use it instead of writing it again below
           // use this declare. on safari as the 1st doesn't work on it (will work on safari only)
           only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
           only screen and (min-width: 125em) {
        background-image: linear-gradient( 
            to right bottom,
            rgba( $color-primary-light, 0.8 ),
            rgba($color-primary-dark, 0.8)
        ),
        url(./../img/hero.jpg);
    }

    // @media (min-width: 2000px) {
    //     background-image: linear-gradient( 
    //         to right bottom,
    //         rgba( $color-primary-light, 0.8 ),
    //         rgba($color-primary-dark, 0.8)
    //     ),
    //     url(./../img/hero.jpg);
    // }
    
    @include respond(phone) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh , 0 100% );
        clip-path: polygon(0 0, 100% 0, 100% 85vh , 0 100% );
    }

    &__logo {
        display: inline-block;
        height: 3.5rem;
        position: absolute;
        top: 4rem;
        left: 4rem; 
    }

    &__hero {
        color: $color-white;
        text-align: center;
        text-transform: uppercase;
        position: absolute;
        top: 40%;
        left: 50%;
        @include prefixes(transform, translate(-50%, -50%));
        transform: translate(-50%, -50%);
    }
 }
 
